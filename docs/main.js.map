{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/unlock/unlock.component.ts","./src/app/unlock/unlock.component.html","./src/app/sign-in/sign-in.component.ts","./src/app/sign-in/sign-in.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/forgotpassword/forgotpassword.component.ts","./src/app/forgotpassword/forgotpassword.component.html","./src/app/app.module.ts","./src/app/adduser/adduser.component.ts","./src/app/adduser/adduser.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"card\">\n    <img src=\"./assets/img/home.jpg\" class=\"img-fluid w-100\" height=\"650px\" alt=\"\">\n    <div class=\"card-img-overlay\">\n        <h1 class=\"text-center text-success\">WEL-COME TO USER MANAGMENT SYSTEM</h1>       \n          <button type=\"button\" class=\"btn btn-primary\">Log Out</button>\n          <router-outlet></router-outlet>\n          <!-- <div class=\"col-md-3\">\n            <div class=\"accordion\" id=\"accordionExample\">\n                <div class=\"accordion-item\">\n                  <h2 class=\"accordion-header\" id=\"headingOne\">\n                    <button class=\"accordion-button toggle\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                      Setting\n                    </button>\n                  </h2>\n                  <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                    <div class=\"accordion-body\">\n                        <div class=\"list-group\">\n  <button type=\"button\" class=\"list-group-item list-group-item-action active\" aria-current=\"true\">\n    The current button\n  </button>\n  <button type=\"button\" class=\"list-group-item list-group-item-action\" routerLink=\"signin\">A second item</button>\n  <button type=\"button\" class=\"list-group-item list-group-item-action\">A third button item</button>\n  <button type=\"button\" class=\"list-group-item list-group-item-action\">A fourth button item</button>\n  <button type=\"button\" class=\"list-group-item list-group-item-action\" disabled>A disabled button item</button>\n</div>\n                    </div>\n                  </div>\n                </div>\n        </div>\n          </div> -->\n         \n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-unlock',\n  templateUrl: './unlock.component.html',\n  styleUrls: ['./unlock.component.css']\n})\nexport class UnlockComponent implements OnInit {\nunlock:FormGroup=new FormGroup({\n  email:new FormControl(''),\n  tempPwd:new FormControl(''),\n  newPwd:new FormControl(''),\n  confirmPwd:new FormControl('')\n})\n  constructor(private unlockus:UserService,private activate:ActivatedRoute) { }\n  submit(value:FormGroup){\n    this.unlockus.unlockuser(this.unlock.value).subscribe((res)=>{console.log(res)})\n  }\n  ngOnInit(): void {\n    this.unlock=new FormGroup({\n      'email':new FormControl('',[Validators.required]),\n      'tempPwd':new FormControl('',[Validators.required]),\n      'newPwd':new FormControl('',[Validators.required]),\n      'confirmPwd':new FormControl('',[Validators.required]),\n    })\n  }\n\n}\n","\r\n    <div class=\"card\">\r\n        <img src=\"./assets/img/forgot.jpg\" alt=\"\">\r\n        <div class=\"card-img-overlay\">\r\n            <div class=\"card-body\">\r\n                <form action=\"\" [formGroup]=\"unlock\">\r\n                    <div class=\"row justify-content-center m-2\">\r\n                     <div class=\"col-md-6\">\r\n                         <h1 class=\"text-center\">UnLock Account</h1>\r\n                     </div>\r\n                    </div>\r\n                     <div class=\"row justify-content-center\">\r\n                         <div class=\"col-md-8\">\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-md-4 m-1\" >\r\n                                    <label for=\"\" class=\"form-label\">Email ID:</label>\r\n                                    <input type=\"email\" class=\"form-control\" formControlName=\"email\" >\r\n                                    <small class=\"text-danger \"\r\n                                    *ngIf=\"!unlock.get('email')?.valid && unlock.get('email')?.touched \">Please Enter Valid\r\n                                    email</small> \r\n                                </div>\r\n                                <div class=\"col-md-4 m-1\">\r\n                                    <label for=\"\" class=\"form-label\">Temperory Password:</label>\r\n                                    <input type=\"password\" class=\"form-control\" formControlName=\"tempPwd\">\r\n                                    <small class=\"text-danger \"\r\n                                    *ngIf=\"!unlock.get('tempPwd')?.valid && unlock.get('tempPwd')?.touched \">Please Enter Valid\r\n                                    temporary password</small> \r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-md-4 m-2\">\r\n                                    <label for=\"\" class=\"form-label\">Choose New Password:</label>\r\n                                    <input type=\"password\" class=\"form-control\" formControlName=\"newPwd\">\r\n                                    <small class=\"text-danger \"\r\n                                    *ngIf=\"!unlock.get('newPwd')?.valid && unlock.get('newPwd')?.touched \">Please Enter Valid\r\n                                    new password</small> \r\n                                </div>\r\n                                <div class=\"col-md-4 m-2\">\r\n                                   <label for=\"\" class=\"form-label\">Confirm Password:</label>\r\n                                   <input type=\"password\" class=\"form-control\" formControlName=\"confirmPwd\">\r\n                                   <small class=\"text-danger \"\r\n                                   *ngIf=\"!unlock.get('confirmPwd')?.valid && unlock.get('confirmPwd')?.touched \">Please Enter Valid\r\n                                   confirm password</small> \r\n                               </div>\r\n                            </div>\r\n                           <div class=\"row justify-content-center\">\r\n                               <div class=\"col-md-2 m-2\">\r\n                                   <button type=\"submit\" class=\"btn btn-warning text-light\" routerLink=\"/signin\" (click)=\"submit(unlock)\">Submit</button>\r\n                               </div>\r\n                           </div>\r\n                         </div>\r\n                     </div>                         \r\n                 </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n  signin:FormGroup=new FormGroup({\n     email:new FormControl(''),\n     pwd:new FormControl('')\n  })\n  dataformat:any;\n  constructor(private login:UserService, private router:Router) {}\n  success:any;\n  check(){\n    if(this.dataformat==\"Invalid Credentials\"){\n      alert(\"Invalid Input\");\n    } \n    // else if(this.accinfo==\"account is locked\"){\n    //    alert(\"your Account is Locked\");}\n       else {\n      this.SignIn();\n      ;\n    }\n  }\n  SignIn(){\n    this.login.loginuser(this.signin.value).subscribe((res)=>{\n      this.dataformat=res;\n      console.log(res);\n      this.success=res;\n      if(this.success==\"SUCCESS\"){\n        this.router.navigate(['/home']).then(()=> window.location.reload()); \n      }\n      })\n  }\n  ngOnInit(): void {\n    this.signin=new FormGroup({\n      'email':new  FormControl('',[Validators.required]),\n      'pwd':new FormControl('',[Validators.required,Validators.minLength(5)]),\n\n    })\n  }\n\n}\n","\n       \n          <div class=\"card \">\n            <img src=\"./assets/img/default.jpg\" class=\" img-fluid w-100\" alt=\"\">\n          <div class=\"card-img-overlay\">\n           <div class=\"row\" >\n           <div class=\"col-md-3\" id=\"formcol\">\n            <form action=\"\" [formGroup]=\"signin\">\n                <div >\n                    <h2 class=\"text-center text-light mt-3\">Sign In</h2>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"m-1\">\n                        <label for=\"\" class=\"form-label text-light\">EMAIL Id:</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n                        <small class=\"text-danger \"\n                        *ngIf=\"!signin.get('email')?.valid && signin.get('email')?.touched \">Please Enter Valid\n                        email</small>   \n                    </div>\n                       <div  class=\"m-1\">\n                        <label for=\"\" class=\"form-label text-light\">PASSWORD:</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"pwd\">\n                        <small class=\"text-danger \"\n                        *ngIf=\"!signin.get('pwd')?.valid && signin.get('pwd')?.touched \">Please Enter Valid\n                        password</small>    \n                    </div>\n            \n                        <div class=\"row justify-content-center mt-2\">\n                            <p class=\"col-md-7 text-center\"><a id=\"op\" class=\"text-success\" routerLink=\"/Forgot\">Forgot Password</a></p>\n                        </div>\n    \n                       <div class=\"text-center\">\n                        <button type=\"button\" class=\"btn btn-primary btn-small \" routerLink=\"/signin\" (click)=\"check()\" >Sign IN</button>\n                       </div>\n                       <p class=\"text-light text-center m-1\">Don't have an account? <a id=\"op\" class=\"text-success\" routerLink=\"/adduser\">Sign-Up</a></p>\n\n            </div>\n               \n            </form>\n          </div>\n        </div>\n        </div>\n    </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'UMS-project';\n}\n","<!-- <div class=\"container-fluid\">\n  <div class=\"row\"> -->\n    <app-navbar></app-navbar>\n  <!-- </div> -->\n  <div class=\"row\">\n        <router-outlet></router-outlet>    \n  </div>\n<!-- </div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n  forgotform:FormGroup=new FormGroup({\n    email:new FormControl('')\n  })\n  constructor(private forgot:UserService) { }\n  Submit(value:FormGroup){\n    this.forgot.forgotuser(this.forgotform.value).subscribe((res)=>{console.log(res)});\n   \n  }\n \n  ngOnInit(): void {\n    this.forgotform=new FormGroup({\n      'email':new FormControl('',[Validators.required])\n    })\n  }\n\n}\n","    <div class=\"card\">\n        <img src=\"./assets/img/forgot.jpg\" alt=\"\">\n        <div class=\"card-img-overlay\">\n             <div class=\"card-body\">\n              <form action=\"\" [formGroup]=\"forgotform\">\n                <div class=\"row justify-content-center mt-5\">\n                  <div class=\"col-md-4\">\n                           <h2 class=\"text-center m-3\">Forgot Password</h2>\n                          \n                           <div class=\"row justify-content-center mt-4\">\n                                \n                                   <div class=\"col-md-2\">\n                                       <label for=\"\" class=\"form-label text-dark\"><b>Email:</b></label>\n                                    </div>\n                                    <div class=\"col-md-8\">\n                                      <input type=\"email\" class=\"form-control\" formControlName=\"email\" >\n                                      <small class=\"text-danger \"\n                                      *ngIf=\"!forgotform.get('email')?.valid && forgotform.get('email')?.touched \">Please Enter Valid\n                                      email</small>  \n                                    </div>\n                                    <div class=\"row justify-content-center m-4\">\n                                        <div class=\"col-md-2\">\n                                          <button type=\"submit\" class=\"btn btn-outline-success\" (click)=\"Submit(forgotform)\">Submit</button> \n                                        </div>\n                                    </div>                    \n                           </div>\n                  </div>\n             </div>\n              </form>\n             </div>\n        </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdduserComponent } from './adduser/adduser.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\nimport { UnlockComponent } from './unlock/unlock.component';\nimport { HttpClientModule } from '@angular/common/http'\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    AdduserComponent,\n    SignInComponent,\n    ForgotpasswordComponent,\n    UnlockComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Alert } from 'selenium-webdriver';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-adduser',\n  templateUrl: './adduser.component.html',\n  styleUrls: ['./adduser.component.css']\n})\nexport class AdduserComponent implements OnInit {\n  adduserform:FormGroup=new FormGroup({\n    fname:new  FormControl('',[Validators.required]),\n    lname:new  FormControl('',[Validators.required]),\n    email:new  FormControl('',[Validators.required]),\n    phno:new  FormControl('',[Validators.required]),\n    dob:new  FormControl('',[Validators.required]),\n    gender:new  FormControl('',[Validators.required]),\n    countryId:new  FormControl('',[Validators.required]),\n    stateId:new  FormControl('',[Validators.required]),\n    cityId:new FormControl('')\n  })\n  constructor(private saveuser:UserService) {}\n  alldata:any;\n  Submit(value:FormGroup){\n    this.saveuser.signinuser(this.adduserform.value).subscribe((res)=>{this.alldata=res;console.log(res)})\n  }\n  emailblur(email:any){\n    if(email==\"DUPLICATE\"){\n      alert(\"email is alredy exist\")\n    }else{\n      this.uniqueEmail();\n    }\n  }\n  uniqueEmail(){\n    this.saveuser.getuniqueemail(this.adduserform.value.email).subscribe((res)=>{\n      console.log(res)\n    })\n  }\n  \n  Reset(value:FormGroup){\n     value.reset()\n  }\n  allcountries:any;\n  getcountrydata(){\n   this.saveuser.getcountry().subscribe(\n    (res:any)=>{\n      this.allcountries=res;\n    }\n   )\n  }\n  allstates:any;\n  getstatedata(countryID:any){\n    this.saveuser.getstate(countryID).subscribe(\n      (res)=>{\n        this.allstates=res\n      }\n    )\n  }\n  allcities:any;\n  getcitydata(stateID:any){\n    this.saveuser.getcity(stateID).subscribe(\n      (res)=>{\n        this.allcities=res;\n      }\n    )\n  }\n  ngOnInit(): void {\n   this.getcountrydata();\n    this.adduserform=new FormGroup({\n      'fname':new  FormControl('',[Validators.required]),\n      'lname':new FormControl('',[Validators.required,Validators.minLength(5)]),\n      'email':new  FormControl('',[Validators.required]),\n      'phno':new  FormControl('',[Validators.required]),\n      'dob':new  FormControl('',[Validators.required]),\n      'gender':new  FormControl('',[Validators.required]),\n      'countryId':new  FormControl('',[Validators.required]),\n      'stateId':new  FormControl('',[Validators.required]),\n      'cityId':new FormControl('',[Validators.required])\n    })\n  }\n\n}\n","\n   <div class=\"row\">\n        <div class=\"col-md-5 \">\n            <img src=\"./assets/img/r2.jpg\"  height=\"700px\" alt=\"\">\n        </div>\n        <div class=\"col-md-7 \">\n          <form action=\"\" [formGroup]=\"adduserform\">\n            <div class=\"card m-3 bg-light\">\n                <div class=\"row m-4\"><h2 class=\"text-center text-danger\">Registration Form</h2></div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\">First Name</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                      <input type=\"text\" class=\"form-control\" formControlName=\"fname\">\n                      <small class=\"text-danger \"\n                      *ngIf=\"!adduserform.get('fname')?.valid && adduserform.get('fname')?.touched \">Please Enter Valid\n                      first Name</small>  \n                    </div>\n                 </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\">Last Name</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"lname\">\n                        <small class=\"text-danger \"\n                        *ngIf=\"!adduserform.get('lname')?.valid && adduserform.get('lname')?.touched \">Please Enter Valid\n                        last name</small>  \n                    </div>\n                 </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\">Email</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <input type=\"email\" class=\"form-control\"  formControlName=\"email\" (blur)=\"emailblur($event.target.value)\">\n                        <small class=\"text-danger \"\n                        *ngIf=\"!adduserform.get('email')?.valid && adduserform.get('email')?.touched \">Please Enter Valid\n                        email</small>  \n                    </div>\n                 </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\">Contact No</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <input type=\"number\" class=\"form-control\" formControlName=\"phno\">\n                        <small class=\"text-danger \"\n                        *ngIf=\"!adduserform.get('phno')?.valid && adduserform.get('phno')?.touched \">Please Enter Valid\n                        phone no</small>  \n                    </div>\n                 </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\">Date Of Birth</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <input type=\"date\" class=\"form-control\" formControlName=\"dob\">\n                        <small class=\"text-danger \"\n                        *ngIf=\"!adduserform.get('dob')?.valid && adduserform.get('dob')?.touched \">Please Enter Valid\n                        date of birth</small>  \n                    </div>\n                 </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\" >Gender</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <input type=\"radio\" name=\"gender\" class=\"form-check-input m-2\" formControlName=\"gender\" checked value=\"MALE\"> \n                        <label for=\"\" class=\"form-check-label \">MALE</label>     \n                  \n                        <input type=\"radio\" name=\"gender\" class=\"form-check-input  m-2\" formControlName=\"gender\" checked value=\"FEMALE\">    \n                        <label for=\"\" class=\"form-check-label\" >FEMALE</label>     \n                        <small class=\"text-danger \"\n                        *ngIf=\"!adduserform.get('gender')?.valid && adduserform.get('gender')?.touched \">Please Enter Valid\n                        gender</small>  \n                    </div>\n                 </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\">Country</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <select class=\"form-select form-control\" (change)=\"getstatedata($event.target.value)\" aria-label=\"Default select example\" name=\"countryId\" formControlName=\"countryId\">\n                            <option [value]=\"c.key\" *ngFor=\"let c of allcountries|keyvalue\">{{c.value}}</option>\n                          </select>               \n                          <small class=\"text-danger\"\n                          *ngIf=\"!adduserform.get('countryId')?.valid && adduserform.get('countryId')?.touched \">Please Enter Valid\n                          country</small>  \n                        </div>\n                 </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\">State</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <select class=\"form-select form-control\" (change)=\"getcitydata($event.target.value)\" aria-label=\"Default select example\" name=\"stateId\" formControlName=\"stateId\">\n                         <option [value]=\"s.key\" *ngFor=\"let s of allstates|keyvalue\">{{s.value}}</option>\n                        \n                       </select>\n                       <small class=\"text-danger \"\n                       *ngIf=\"!adduserform.get('stateId')?.valid && adduserform.get('stateId')?.touched \">Please Enter Valid\n                       state</small>  \n                    </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\">\n                        <label for=\"\" class=\"form-label\">CITY</label>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <select class=\"form-select form-control\" aria-label=\"Default select example\" name=\"cityId\" formControlName=\"cityId\">\n                            <option [value]=\"n.key\" *ngFor=\"let n of allcities|keyvalue\">{{n.value}}</option>\n    \n                          </select>                \n                          <small class=\"text-danger \"\n                          *ngIf=\"!adduserform.get('cityId')?.valid && adduserform.get('cityId')?.touched \">Please Enter Valid\n                          city</small>  \n                        </div>\n                 </div>\n                 <div class=\"row justify-content-center m-2\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-7\">\n                     <button type=\"button\" class=\"btn btn-success m-2\" (click)=\"Submit(adduserform)\">Submit</button>\n                     <button type=\"button\" class=\"btn btn-danger m-2\" (click)=\"Reset(adduserform)\">Reset</button>\n                 </div>\n              </div>\n            </div>\n     </div>\n    </form>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n<div class=\"row\">\n       <nav class=\"navbar navbar-expand-md bg-warning navbar-warning\">\n        <a href=\"\" class=\"navbar-brand text-light\"><i class=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i>UMS</a>\n        <div class=\"collapse navbar-collapse justify-content-end\">\n          <ul class=\"navbar-nav\"> \n            <li class=\"nav-item mx-3\"><button type=\"button\" class=\"btn text-light\" routerLink=\"home\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></button></li>\n            <li class=\"nav-item mx-3\"><button type=\"button\" class=\"btn text-light\" routerLink=\"adduser\"><i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i></button></li>\n            <li class=\"nav-item mx-3\"><button type=\"button\" class=\"btn text-light\" routerLink=\"signin\">Log-In</button></li>\n            <!-- <li class=\"nav-item mx-3\"><button type=\"button\" class=\"btn text-light\" routerLink=\"unlock\"><i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> </button></li>-->\n          </ul>\n        </div>\n      </nav>\n    </div>  \n  </div> \n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http:HttpClient) { }\n\n  loginuser(body:any){\n    return this.http.post(`http://localhost:9090/login`,body,{responseType:'text'})\n  }\n  signinuser(body:any){\n    return this.http.post(`http://localhost:9090/saveUser`,body,{responseType:'text'})\n  }\n  forgotuser(email:any){\n    return this.http.get(`http://localhost:9090/forgotPwd/${email}`)\n  }\n  unlockuser(body:any){\n    return this.http.post(`http://localhost:9090/unlock`,body,{responseType:'text'})\n  }\n  getcity(cityId:any){\n    return this.http.get(`http://localhost:9090/cities/${cityId}`)\n  }\n  getcountry(){\n    return this.http.get(`http://localhost:9090/countries`)\n  }\n  getstate(stateId:any){\n    return this.http.get(`http://localhost:9090/states/${stateId}`)\n  }\n  getuniqueemail(email:any){\n    return this.http.get(`http://localhost:9090/emailcheck/${email}`,{responseType:'text'})\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdduserComponent } from './adduser/adduser.component';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { UnlockComponent } from './unlock/unlock.component';\n\nconst routes: Routes = [\n  {path:'',component:SignInComponent},\n  {path:'home',component:HomeComponent},\n  {path:'adduser',component:AdduserComponent},\n  {path:'signin',component:SignInComponent},\n  {path:'Forgot',component:ForgotpasswordComponent},\n  {path:'unlockAcc',component:UnlockComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}